/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufrn.hospital.GUI;

import br.ufrn.hospital.controller.EventoController;
import br.ufrn.hospital.controller.PacienteController;
import br.ufrn.hospital.exceptions.DAOException;
import br.ufrn.model.Evento;
import br.ufrn.model.Paciente;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author augusto
 */
public class MonitoramentoPacienteUI extends javax.swing.JFrame {

    /**
     * Creates new form MonitoramentoPacienteUI
     */
    
        private DefaultTableModel tmPacientes = new DefaultTableModel(null,
            new String[]{"Nome", "CPF", "Diagnóstico"});
        private DefaultTableModel tmEventos = new DefaultTableModel(null,
            new String[]{"Data", "Descricao"});
            private PacienteController pcController = new PacienteController();
    private List<Paciente> pacientes = new ArrayList<Paciente>();
    private EventoController evController = new EventoController();
    private List<Evento> eventos = new ArrayList<Evento>();

    public MonitoramentoPacienteUI() {
        
        initComponents();
        try {
            pacientes = pcController.listarPacientes();
            exibirDadosPaciente(pacientes);
        } catch (DAOException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possivel carregar os pacientes");
        }
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
                try {
                    eventos = evController.listarEventosPorPaciente(pacientes.get(jTable1.getSelectedRow()));
                    exibirDadosEvento(eventos);
                } catch (DAOException ex) {
                    JOptionPane.showMessageDialog(null, "Não foi possivel carregar os eventos");
                }
        }
    });
    }
    
        private void exibirDadosEvento(List<Evento> eventos) {
        
        while (tmEventos.getRowCount() > 0) {
            tmEventos.removeRow(0);
        }
               
        String[] campos = new String[]{null, null};
        SimpleDateFormat dt = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
        for (int i = 0; i < eventos.size(); i++) {
            tmEventos.addRow(campos);
            tmEventos.setValueAt(dt.format(eventos.get(i).getData().getTime()), i, 0);
            tmEventos.setValueAt((eventos.get(i).getDescricao()), i, 1);
        }
        
    }
        
        

    
    private void exibirDadosPaciente(List<Paciente> pacientes) {
        
        while (tmPacientes.getRowCount() > 0) {
            tmPacientes.removeRow(0);
        }
               
        String[] campos = new String[]{null, null, null};
        
        for (int i = 0; i < pacientes.size(); i++) {
            tmPacientes.addRow(campos);
            tmPacientes.setValueAt(pacientes.get(i).getNome(), i, 0);
            tmPacientes.setValueAt((pacientes.get(i).getIdTopico()), i, 1);
            tmPacientes.setValueAt(pacientes.get(i).getDiagnostico(), i, 2);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monitoramento dos pacientes");

        jTable1.setModel(tmPacientes);
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(tmEventos);
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap(457, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitoramentoPacienteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitoramentoPacienteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitoramentoPacienteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitoramentoPacienteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MonitoramentoPacienteUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
